[{"E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\index.js":"1","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\reportWebVitals.js":"2","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\App.js":"3","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\Row.js":"4","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\requests.js":"5","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\axios.js":"6","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\Banner.js":"7","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\Nav.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":937,"mtime":1606168244366,"results":"12","hashOfConfig":"10"},{"size":2091,"mtime":1606213197678,"results":"13","hashOfConfig":"10"},{"size":705,"mtime":1606148266147,"results":"14","hashOfConfig":"10"},{"size":143,"mtime":1606148409722,"results":"15","hashOfConfig":"10"},{"size":1754,"mtime":1606167654807,"results":"16","hashOfConfig":"10"},{"size":973,"mtime":1606207122597,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1q88lkh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\index.js",[],["39","40"],"E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\reportWebVitals.js",[],"E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\App.js",["41"],"import logo from './logo.svg';\nimport Row from './Row';\nimport './App.css';\nimport requests from './requests';\nimport Nav from './Nav';\nimport Banner from './Banner';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row \n        title=\"NETFLIX ORIGINALS\" \n        fetchUrl={requests.fetchNetflixOriginals\n      }\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl ={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl ={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl ={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl ={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl ={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl ={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl ={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n",["42","43"],"E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\Row.js",["44","45"],"import React, {useState,useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests from \"./requests\";\r\nimport './Row.css';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction Row({title,fetchUrl, isLargeRow}) {\r\n    const [movies,setMovies] = useState([]);\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n    // A snippet of code which runs based\r\n    useEffect(() => {\r\n        // if [] run once when the row load and never run again\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n     const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 1,\r\n      },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n            movieTrailer(movie?.title || movie?.name || movie?.original_name || \"\")\r\n            .then(url => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n            {/* several row_poster*/}\r\n            {movies.map(movie =>(\r\n                <img\r\n                    onClick={()=> handleClick(movie)}\r\n                    key={movie.id}\r\n                    className={`row_poster ${isLargeRow && \"row_posterLarge\"} `}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n            ))}\r\n\r\n            </div>\r\n        {trailerUrl && <Youtube videoId ={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\requests.js",[],"E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\axios.js",[],"E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\Banner.js",["46"],"import React, { useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n    const [movie,setMovie] = useState([]);\r\n\r\n    // using useEffect \r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length -1)\r\n                ]);\r\n                return request;\r\n        }\r\n        fetchData();\r\n    },[]);\r\n    console.log(movie);\r\n\r\n    function truncate(str, n){\r\n        return str ?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n    return (\r\n        <header className=\"banner\"\r\n            style = {{\r\n                backgroundSize:\"cover\",\r\n                backgroundImage: `url(\r\n                    https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\r\n                )`,\r\n                backgroundPosition:\"center center\"\r\n            }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner__description\">\r\n                    {truncate(movie.overview, 150)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","E:\\Web Development\\React\\Quazi\\nextflix-clone\\src\\Nav.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"47","replacedBy":"55"},{"ruleId":"49","replacedBy":"56"},{"ruleId":"51","severity":1,"message":"57","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":24,"column":7,"nodeType":"60","endLine":24,"endColumn":9,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":24,"column":16,"nodeType":"64","messageId":"65","endLine":24,"endColumn":28,"fix":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["67"],["68"],"'requests' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUrl'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-whitespace-before-property","Unexpected whitespace before property length.","MemberExpression","unexpectedWhitespace",{"range":"70","text":"71"},"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},[688,691],"?.","Update the dependencies array to be: [fetchUrl]",{"range":"74","text":"75"},[768,770],"[fetchUrl]"]